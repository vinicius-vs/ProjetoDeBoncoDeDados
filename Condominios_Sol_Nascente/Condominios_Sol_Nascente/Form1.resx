<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>